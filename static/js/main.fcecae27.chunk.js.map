{"version":3,"sources":["Answer.js","Previous.js","Question.js","Intro.js","Card.js","Display.js","Nav.js","App.js","index.js"],"names":["Answer","_this$props","this","props","answeredCorrectly","numOfGuesses","nextQuestion","showResult","displayResultClass","react_default","a","createElement","className","onClick","Component","Previous","answer","prevAnswer","toString","Question","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","updateInput","e","setState","userInput","target","value","submitGuess","checkAnswer","state","previouslyAnswered","showBtnText","definition","Previous_Previous","type","onChange","placeholder","onFocus","onBlur","Intro","nextQuestionHandler","Card","_this$state","question","questions","updateAnswersHandler","randomIndex","getRandomNumber","length","findQuestion","showNextQuestion","max","Math","floor","random","index","shift","userGuess","guessIsCorrect","toLowerCase","getPreviousAnswer","curDef","answeredQuestions","forEach","lookForPrevResult","matchedAnswer","_this$state2","Question_Question","Answer_Answer","Intro_Intro","Display","correctlyAnswered","prototypes","Card_Card","Nav","score","resetHandler","App","componentDidMount","fetch","then","data","json","setTimeout","aTypes","getFromStorage","tallyScore","catch","err","console","error","localStorage","JSON","parse","getItem","updateAnsweredQuestions","guess","modArr","push","setItem","stringify","filter","resetAnsweredQuestions","removeItem","Nav_Nav","Display_Display","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.fcecae27.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './CSS/Main.scss';\n\nexport default class Answer extends Component {\n\n  render() {\n    let { answeredCorrectly, numOfGuesses, nextQuestion } = this.props;\n\n    let showResult = answeredCorrectly ? \"THAT'S CORRECT!\" : \"THAT'S INCORRECT!\";\n    let displayResultClass = answeredCorrectly ? 'correct' : 'incorrect';\n    \n    return (\n      <div className=\"answer\">\n        {\n          numOfGuesses > 0 &&\n          <button\n            onClick={nextQuestion}\n            className=\"next-question\">\n            Submit answer & show next Question\n          </button>\n        }\n        {numOfGuesses > 0 && <p className={displayResultClass}>{showResult}</p>}\n      </div>\n    )\n  }\n}\n\n\n","import React, { Component } from 'react';\nimport './CSS/Main.scss';\n\nexport default class Previous extends Component {\n\n  render() {\n    let {prevAnswer } = this.props;\n    let answer;\n    prevAnswer ? answer = 'correct' : answer = 'incorrect'\n\n    return (\n      <div>\n        <p className=\"previous\">\n          Previous result for this question was:\n          <span className={prevAnswer.toString()}> {answer}</span>\n        </p>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport './CSS/Main.scss';\nimport Previous from './Previous.js';\n\nexport default class Question extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      userInput: '',\n      previouslyAnswered: true\n    }\n  }\n\n  updateInput = (e) => {\n    this.setState({ userInput: e.target.value })\n  }\n\n  submitGuess = () => {\n    this.setState({ userInput: '' }, this.props.checkAnswer(this.state.userInput))\n  }\n\n  render() {\n    let { showBtnText, numOfGuesses, definition, previouslyAnswered, prevAnswer } = this.props;\n\n    return (\n      <div className=\"question\">\n        <p className=\"num-guess\">\n          Number of guesses so far:\n          <span className=\"count\">  {numOfGuesses}</span>\n        </p>\n        <p className=\"definition\">{definition}</p>\n          {\n            previouslyAnswered &&\n            <Previous prevAnswer={prevAnswer} />\n          }\n        <input\n          type=\"text\"\n          className=\"user-input\"\n          value={this.state.userInput}\n          onChange={this.updateInput}\n          placeholder=\"ENTER YOUR ANSWER HERE\"\n          onFocus={(e) => e.target.placeholder = \"\"}\n          onBlur={(e) => e.target.placeholder = \"ENTER YOUR ANSWER HERE\"} />\n        <button\n          onClick={this.submitGuess}\n          className=\"user-btn\">{showBtnText}\n        </button>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport './CSS/Main.scss';\n// import Answer from './Answer.js'\n\nexport default class Intro extends Component {\n\n  render() {\n    let { nextQuestionHandler } = this.props;\n    return (\n      <div>\n        <h4\n          onClick={nextQuestionHandler}\n          className=\"begin\">\n          Click to begin\n        </h4>\n        <p className=\"intro\">\n          Welcome to Study Time, a web-based\n          flashcard app to practice how well\n          you know your Javascript Array Prototypes!\n        </p>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport './CSS/Main.scss';\nimport Answer from './Answer.js'\nimport Question from './Question.js'\nimport Intro from './Intro.js'\n\nexport default class Card extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      numOfGuesses: 0,\n      question: null,\n      answeredCorrectly: false,\n      showNextQuestion: false,\n      prevAnswer: null\n    }\n  }\n\n  nextQuestionHandler = () => {\n    let { question, answeredCorrectly } = this.state;\n    let { questions, updateAnswersHandler } = this.props\n    let randomIndex = this.getRandomNumber(questions.length)\n    let answer = this.findQuestion('keys', randomIndex)\n    let definition = this.findQuestion('values', randomIndex)\n\n    if (question) updateAnswersHandler(question, answeredCorrectly)\n\n    this.setState({\n      numOfGuesses: 0,\n      question: { definition, answer },\n      answeredCorrectly: false,\n      showNextQuestion: true\n    })\n  }\n\n  getRandomNumber = (max) => {\n    return Math.floor(Math.random() * max)\n  }\n\n  findQuestion = (type, index) => {\n    return Object[type](this.props.questions[index]).shift()\n  }\n\n  checkAnswer = (userGuess) => {\n    let { answer } = this.state.question;\n    let guessIsCorrect = userGuess.toLowerCase() === answer.toLowerCase()\n\n    this.setState({\n      numOfGuesses: this.state.numOfGuesses + 1,\n      answeredCorrectly: guessIsCorrect\n    })\n  }\n\n  getPreviousAnswer = (curDef) => {\n    let prevAnswer = null;\n    \n    this.props.answeredQuestions.forEach(answer => {\n      if (answer.question.definition === curDef) {\n        prevAnswer = answer.userGuess;\n      } \n    })\n    return prevAnswer;\n  }\n\n  lookForPrevResult = (curDef) => {\n    let matchedAnswer = false;\n    \n    this.props.answeredQuestions.forEach(answer => {\n      if (answer.question.definition === curDef) {\n        matchedAnswer = true;\n      } \n    })\n\n    if (matchedAnswer) return true\n    else return false;\n  }\n\n  showBtnText = () => {\n    if (this.state.numOfGuesses > 0) return 'Click to try again';\n    else return 'Click to check answer';\n  }\n\n  render() {\n    let { showNextQuestion, numOfGuesses, answeredCorrectly } = this.state;\n\n    if (showNextQuestion) {\n      let { definition } = this.state.question;\n      return (\n        <div className=\"card\">\n          <Question\n            numOfGuesses={numOfGuesses}\n            definition={definition}\n            checkAnswer={this.checkAnswer}\n            previouslyAnswered={this.lookForPrevResult(definition)}\n            prevAnswer={this.getPreviousAnswer(definition)}\n            showBtnText={this.showBtnText()} />\n          <Answer\n            nextQuestion={this.nextQuestionHandler}\n            answeredCorrectly={answeredCorrectly}\n            numOfGuesses={numOfGuesses} />\n        </div>\n      )\n    } else {\n      return (\n        <Intro nextQuestionHandler={this.nextQuestionHandler} />\n      )\n    }\n  }\n}","import React, { Component } from 'react';\nimport './CSS/Main.scss';\nimport Card from './Card.js'\n\nexport default class Display extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      correctlyAnswered: null\n    }\n  }\n\n  render() {\n    let { prototypes, updateAnswersHandler, answeredQuestions } = this.props;\n\n    return (\n      <section className=\"display\">\n        <Card\n          questions={prototypes}\n          updateAnswersHandler={updateAnswersHandler}\n          answeredQuestions={answeredQuestions} />\n      </section>\n    )\n  }\n}","import React, { Component } from 'react';\nimport './CSS/Main.scss';\n\nexport default class Nav extends Component {\n\n  render() {\n    let { score, resetHandler } = this.props;\n \n    return (\n      <nav className=\"nav\">\n        <ul className=\"types\">\n          <li className=\"aTypes\">Practice Array Prototypes!</li>\n        </ul>\n        <ul className=\"user\">\n          <li>Total correct: {score}</li>\n          <li onClick={resetHandler}\n            className=\"reset-btn\">Reset your progress</li>\n        </ul>\n      </nav>\n    );\n  }\n}","import React, { Component } from 'react';\nimport './CSS/Main.scss';\nimport Display from './Display.js';\nimport Nav from './Nav.js';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      prototypes: [], \n      answeredQuestions: [],\n      score: 0\n    }\n  }\n\n  componentDidMount = () => { \n    fetch('https://memoize-datasets.herokuapp.com/api/v1/aTypes')\n      .then(data => data.json())\n      .then(data => {\n        setTimeout(() => {\n          this.setState({\n            prototypes: data.aTypes,\n            answeredQuestions: this.getFromStorage()\n          }, this.tallyScore)\n        }, 200);\n      })\n      .catch(err => console.error(err))\n  }\n\n  getFromStorage = () => {\n    if (localStorage.length === 0) {\n      return [];\n    } else {\n      return JSON.parse(localStorage.getItem('userAnsweredQuestions'))\n    }\n  }\n\n  updateAnsweredQuestions = (question, guess) => {\n    let modArr = this.state.answeredQuestions\n    modArr.push({ userGuess: guess, question: question })\n\n    this.setState({ answeredQuestions: modArr }, this.tallyScore())\n    localStorage.setItem('userAnsweredQuestions', JSON.stringify(modArr))    \n  }\n\n  tallyScore = () => { \n    let { answeredQuestions } = this.state;\n    let score = 0;\n\n    if (answeredQuestions.length) {\n      score = answeredQuestions.filter(answer => {\n        return answer.userGuess\n      }).length;\n    }\n\n    this.setState({ score })\n  }\n\n  resetAnsweredQuestions = () => {\n    this.setState({ answeredQuestions: [], score: 0 })\n    localStorage.removeItem('userAnsweredQuestions');\n  }\n\n  render() {\n    let { prototypes, answeredQuestions, score } = this.state;\n\n    return (\n      <main className=\"App\">\n        <h1 className=\"header\">Welcome to Study Time</h1>\n        <Nav\n          score={score}\n          resetHandler={this.resetAnsweredQuestions} />\n        <Display\n          prototypes={prototypes}\n          updateAnswersHandler={this.updateAnsweredQuestions}\n          answeredQuestions={answeredQuestions} />\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './Main.scss';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}